// <auto-generated />
using System;
using HomesApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace unityHomesApi.Migrations
{
    [DbContext(typeof(HomesDbContext))]
    [Migration("20240112084824_AddProprtyType")]
    partial class AddProprtyType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HomesApi.Models.Property", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("HasGarden")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<int>("MonthlyRent")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfBedrooms")
                        .HasColumnType("integer");

                    b.Property<string>("Postcode")
                        .HasColumnType("text");

                    b.Property<int?>("PropertyNumber")
                        .HasColumnType("integer");

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("SquareMeeterage")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PropertyTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            City = "City 1",
                            DateAdded = new DateTimeOffset(new DateTime(2024, 1, 12, 8, 48, 23, 780, DateTimeKind.Unspecified).AddTicks(3720), new TimeSpan(0, 0, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2024, 1, 12, 8, 48, 23, 780, DateTimeKind.Unspecified).AddTicks(3720), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "A nice little cottage in the countryside.",
                            HasGarden = true,
                            IsAvailable = true,
                            MonthlyRent = 300,
                            NumberOfBedrooms = 3,
                            Postcode = "AB12 3CD",
                            PropertyNumber = 1,
                            PropertyTypeId = 4,
                            SquareMeeterage = 100,
                            Street = "Road 1",
                            Title = "Cozy Cottage"
                        },
                        new
                        {
                            Id = 2L,
                            City = "City 3",
                            DateAdded = new DateTimeOffset(new DateTime(2024, 1, 12, 8, 48, 23, 780, DateTimeKind.Unspecified).AddTicks(3730), new TimeSpan(0, 0, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2024, 1, 12, 8, 48, 23, 780, DateTimeKind.Unspecified).AddTicks(3730), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Modern apartment in the city center.",
                            HasGarden = false,
                            IsAvailable = true,
                            MonthlyRent = 200,
                            NumberOfBedrooms = 1,
                            Postcode = "BC34 5DE",
                            PropertyNumber = 2,
                            PropertyTypeId = 2,
                            SquareMeeterage = 50,
                            Street = "Road 2",
                            Title = "Urban Apartment"
                        },
                        new
                        {
                            Id = 3L,
                            City = "City 3",
                            DateAdded = new DateTimeOffset(new DateTime(2024, 1, 12, 8, 48, 23, 780, DateTimeKind.Unspecified).AddTicks(3730), new TimeSpan(0, 0, 0, 0, 0)),
                            DateUpdated = new DateTimeOffset(new DateTime(2024, 1, 12, 8, 48, 23, 780, DateTimeKind.Unspecified).AddTicks(3730), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "A nice little cottage in the countryside.",
                            HasGarden = true,
                            IsAvailable = false,
                            MonthlyRent = 600,
                            NumberOfBedrooms = 4,
                            Postcode = "XY98 7ZW",
                            PropertyNumber = 3,
                            PropertyTypeId = 1,
                            SquareMeeterage = 185,
                            Street = "Road 3",
                            Title = "Country House"
                        });
                });

            modelBuilder.Entity("HomesApi.Models.PropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "House"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Apartment"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cottage"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Flat"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mansion"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Studio"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Villa"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Bungalow"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Penthouse"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("HomesApi.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("firstName")
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("userName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HomesApi.Models.Property", b =>
                {
                    b.HasOne("HomesApi.Models.PropertyType", "PropertyType")
                        .WithMany()
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomesApi.Models.User", null)
                        .WithMany("Properties")
                        .HasForeignKey("UserId");

                    b.Navigation("PropertyType");
                });

            modelBuilder.Entity("HomesApi.Models.User", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
